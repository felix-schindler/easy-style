@charset "UTF-8";
/*!
Easy Style CSS Framework v0.1.2
URL: https://github.com/felix-schindler/easy-style
*/
/* Header - Main Footer */
.hmf {
  margin: 0;
  display: grid;
  grid-template-rows: auto 1fr auto;
  min-height: 100vh;
}

.hmf > header, .hmf > main, .hmf > footer {
  padding: 1em;
}

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(325px, 1fr));
  gap: 1em;
}

.card {
  padding: 1em;
  background-color: rgba(var(--gray-rgb), 0.2);
  border-radius: var(--radius);
}

a {
  color: inherit;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

/* Special */
a[target=_blank]::after {
  content: " ↗️";
}

a[href^=mailto\:]:before {
  content: "📧 ";
}

a[href^=tel\:]:before {
  content: "📞 ";
}

a[href^=sms\:]:before {
  content: "💬 ";
}

/* The color get's overwritten from the statement above */
a[role=button] {
  color: var(--on-accent);
}

a[role=button][disabled] {
  pointer-events: none;
}

a[role=button][disabled]:hover {
  text-decoration: none;
}

nav {
  display: flex;
  align-items: flex-start;
  gap: 0.125em;
  overflow-x: scroll;
}
nav::-webkit-scrollbar {
  display: none;
}
nav a {
  white-space: pre;
  border-radius: var(--radius);
  padding: 0.5em 0.75em;
}
nav a:hover {
  text-decoration: none;
  background-color: rgba(var(--gray-rgb), 0.25);
}
nav a.active {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  border-bottom: 3px solid var(--accent);
}

/* Buttons */
:where(button,
a[role=button],
input[type=button],
input[type=submit],
input[type=reset],
input[type=file]),
:where(input[type=file])::file-selector-button {
  font-size: 1em;
  border: 0;
  margin: 2px;
  cursor: pointer;
  text-decoration: none;
  padding: 0.5em 0.75em;
  color: var(--on-accent);
  background-color: var(--accent);
  border-radius: var(--radius);
  transition: var(--trans);
  /* Secondary */
  /* Big */
  /* Reset */
}
:where(button,
a[role=button],
input[type=button],
input[type=submit],
input[type=reset],
input[type=file]):not(:active):hover,
:where(input[type=file])::file-selector-button:not(:active):hover {
  background-color: rgba(var(--accent-rgb), 0.9);
}
:where(button,
a[role=button],
input[type=button],
input[type=submit],
input[type=reset],
input[type=file]):active,
:where(input[type=file])::file-selector-button:active {
  background-color: rgba(var(--accent-rgb), 0.8);
}
:where(button,
a[role=button],
input[type=button],
input[type=submit],
input[type=reset],
input[type=file]).s,
:where(input[type=file])::file-selector-button.s {
  color: var(--accent);
  background-color: rgba(var(--gray-rgb), 0.25);
  padding: 0.3em 0.5em;
  border-radius: calc(var(--radius) * 10);
}
:where(button,
a[role=button],
input[type=button],
input[type=submit],
input[type=reset],
input[type=file]).s:not(:active):hover,
:where(input[type=file])::file-selector-button.s:not(:active):hover {
  background-color: rgba(var(--gray-rgb), 0.2);
}
:where(button,
a[role=button],
input[type=button],
input[type=submit],
input[type=reset],
input[type=file]).s:active,
:where(input[type=file])::file-selector-button.s:active {
  background-color: rgba(var(--gray-rgb), 0.15);
}
:where(button,
a[role=button],
input[type=button],
input[type=submit],
input[type=reset],
input[type=file]).b,
:where(input[type=file])::file-selector-button.b {
  padding: 0.75em 1em;
}
:where(button,
a[role=button],
input[type=button],
input[type=submit],
input[type=reset],
input[type=file])[type=reset],
:where(input[type=file])::file-selector-button[type=reset] {
  background-color: var(--red);
}
:where(button,
a[role=button],
input[type=button],
input[type=submit],
input[type=reset],
input[type=file])[type=reset]:not(:active):hover,
:where(input[type=file])::file-selector-button[type=reset]:not(:active):hover {
  background-color: rgba(var(--red-rgb), 0.9);
}
:where(button,
a[role=button],
input[type=button],
input[type=submit],
input[type=reset],
input[type=file])[type=reset]:active,
:where(input[type=file])::file-selector-button[type=reset]:active {
  background-color: rgba(var(--red-rgb), 0.8);
}

/* Inputs */
input:not(:where([type=button], [type=submit], [type=reset])), textarea, select {
  font: var(--sans);
  border: 1px solid var(--gray);
  border-radius: var(--radius);
  padding: 0.25em 0.5em;
  font-size: 1.125em;
}

/* Focus */
input:focus, textarea:focus, select:focus {
  border-color: var(--accent);
}

/* Small */
input.s, textarea.s, select.s {
  font-size: 1em;
}

/* Big */
input.b, textarea.b, select.b {
  font-size: 1.25em;
}

/* Special */
input[type=number] {
  font-family: var(--mono);
}

input[type=search] {
  border-radius: calc(var(--radius) * 10);
}

input[type=radio], input[type=checkbox] {
  cursor: pointer;
  vertical-align: text-bottom;
}

/* Labels */
label {
  cursor: pointer;
}

label, .label {
  color: var(--gray);
  text-transform: uppercase;
  letter-spacing: 1px;
}

/* Global */
[disabled],
:disabled {
  cursor: not-allowed;
}

/* Buttons */
:where(button,
a[role=button],
input[type=button],
input[type=submit],
input[type=reset])[disabled] {
  background-color: rgba(var(--accent-rgb), 0.6);
}

/* Secondary */
:where(button,
a[role=button],
input[type=button],
input[type=submit],
input[type=reset]).s[disabled] {
  opacity: 0.75;
  background-color: rgba(var(--gray-rgb), 0.2);
}

/* Reset disabled */
:where([type=reset])[disabled] {
  background-color: rgba(var(--red-rgb), 0.6);
}

/* Inputs */
input[disabled],
textarea[disabled] {
  background-color: rgba(var(--gray-rgb), 0.2);
}

table.w {
  width: 100%;
}
table th {
  text-align: start;
}
table th,
table td {
  padding: 0.5em;
}
table thead {
  border-bottom: 1px solid rgba(var(--gray-rgb), 0.2);
}
table tbody > tr:nth-child(2n) {
  background-color: rgba(var(--gray-rgb), 0.2);
}
table tbody > tr:hover {
  background-color: rgba(var(--gray-rgb), 0.3);
}

.mono {
  font-family: var(--mono);
}

.sans {
  font-family: var(--sans);
}

/* Misc */
html {
  font-family: var(--sans);
  color-scheme: light dark;
  /* Accent */
  --accent-rgb: 30, 144, 255;
  --accent: rgb(var(--accent-rgb));
  --on-accent: white;
  /* Red */
  --red-rgb: 255, 64, 64;
  --red: rgb(var(--red-rgb));
  /* Gray */
  --gray-rgb: 150, 150, 150;
  --gray: rgb(var(--gray-rgb));
  /* Misc */
  --sans: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  --mono: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;
  --radius: 8px;
  --trans: background-color 200ms;
}

code {
  color: var(--red);
  background-color: rgb(var(--gray-rgb), 0.3);
  border-radius: var(--radius);
  font-size: 14px;
  padding: 0.25em;
}

mark {
  color: var(--on-accent);
  background-color: var(--accent);
}

hr {
  border: 1px solid var(--gray);
  border-radius: var(--radius);
  border-collapse: collapse;
  width: 100%;
}

img,
video {
  max-width: 100%;
  height: auto;
}

::selection {
  color: var(--on-accent);
  background-color: var(--accent);
}

/*# sourceMappingURL=easy-style.min.css.map */
